{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "FND",
            "Original Code": "void concatenate2d_0(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1], input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1], res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n#pragma HLS PIPELINE\n\nfor (int ii = 0; ii < CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1; ii++) {\nres[ii] = data1[ii];\n}\nfor (int ii = 0; ii < CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1; ii++) {\nres[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + ii] = data2[ii];\n}\n}",
            "Faulty Code": "void concatenate2d_0(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1], input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1], res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n#pragma HLS PIPELINE\n#pragma HLS array_partition variable=data1 cyclic factor=3\n\nfor (int ii = 0; ii < CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1; ii++) {\nres[ii] = data1[ii];\n}\nfor (int ii = 0; ii < CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1; ii++) {\nres[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + ii] = data2[ii];\n}\n}"
        }
    ]
}