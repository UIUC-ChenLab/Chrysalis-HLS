{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "MLP",
            "Original Code": "void outputdatamover(hls::stream<status_t>& status_in_strm, bool* ovflo,\n                     hls::stream<cmpxDataOut>& in_strm,\n                     hls::stream<cmpxDataOut>& out) {\nL0:\n    for (int i = 0; i < FFT_LENGTH; i++) {\n#pragma HLS pipeline II = 1 rewind\n        out.write(in_strm.read());\n    }\n    status_t status = status_in_strm.read();\n    *ovflo = status.getOvflo() & 0x1;\n}",
            "Faulty Code": "void outputdatamover(hls::stream<status_t>& status_in_strm, bool* ovflo,\n                     hls::stream<cmpxDataOut>& in_strm,\n                     hls::stream<cmpxDataOut>& out) {\n    #pragma HLS pipeline II = 2\nL0:\n    for (int i = 0; i < FFT_LENGTH; i++) {\n#pragma HLS pipeline II = 1 rewind\n        out.write(in_strm.read());\n    }\n    status_t status = status_in_strm.read();\n    *ovflo = status.getOvflo() & 0x1;\n}"
        }
    ]
}