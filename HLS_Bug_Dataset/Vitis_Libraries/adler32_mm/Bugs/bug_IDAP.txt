{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "IDAP",
            "Original Code": "// Content of called function\nvoid mm2s32(const ap_uint<PARALLEL_BYTE * 8>* in,\n            const ap_uint<32>* inChecksumData,\n            hls::stream<ap_uint<PARALLEL_BYTE * 8> >& outStream,\n            hls::stream<ap_uint<32> >& outChecksumStream,\n            hls::stream<ap_uint<32> >& outLenStream,\n            hls::stream<bool>& outLenStreamEos,\n            ap_uint<32> inputSize) {\n    uint32_t inSize_gmemwidth = (inputSize - 1) / PARALLEL_BYTE + 1;\n    uint32_t readSize = 0;\n\n    outLenStream << inputSize;\n    outChecksumStream << inChecksumData[0];\n    outLenStreamEos << false;\n    outLenStreamEos << true;\n\nmm2s_simple:\n    for (uint32_t i = 0; i < inSize_gmemwidth; i++) {\n#pragma HLS PIPELINE II = 1\n        ap_uint<PARALLEL_BYTE* 8> temp = in[i];\n        outStream << temp;\n    }\n}",
            "Faulty Code": "// Content of called function\nvoid mm2s32(const ap_uint<PARALLEL_BYTE * 8>* in,\n            const ap_uint<32>* inChecksumData,\n            hls::stream<ap_uint<PARALLEL_BYTE * 8> >& outStream,\n            hls::stream<ap_uint<32> >& outChecksumStream,\n            hls::stream<ap_uint<32> >& outLenStream,\n            hls::stream<bool>& outLenStreamEos,\n            ap_uint<32> inputSize) {\n#pragma HLS INTERFACE mode=ap_fifo port=in\n    uint32_t inSize_gmemwidth = (inputSize - 1) / PARALLEL_BYTE + 1;\n    uint32_t readSize = 0;\n\n    outLenStream << inputSize;\n    outChecksumStream << inChecksumData[0];\n    outLenStreamEos << false;\n    outLenStreamEos << true;\n\nmm2s_simple:\n    for (uint32_t i = 0; i < inSize_gmemwidth; i++) {\n#pragma HLS PIPELINE II = 1\n        ap_uint<PARALLEL_BYTE* 8> temp = in[i];\n        outStream << temp;\n    }\n}"
        }
    ]
}