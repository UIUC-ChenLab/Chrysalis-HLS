{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "DFP",
            "Original Code": "\"\"\"void ConvLayer_Batch(hls::stream<ap_uint<InStreamW>>  &in,\n\t\t\t    hls::stream<ap_uint<OutStreamW>> &out,\n\t\t\t    TW const        &weights,\n\t\t\t    TA const        &activation,\n\t\t\t    unsigned const   reps,\n\t\t\t\tR const &r) {\n#pragma HLS INLINE\n  unsigned const MatrixW = ConvKernelDim * ConvKernelDim * IFMChannels;\n  unsigned const MatrixH = OFMChannels;\n  unsigned const InpPerImage = IFMDim * IFMDim * IFMChannels * TSrcI::width / InStreamW;\n  hls::stream<ap_uint<SIMD*TSrcI::width> > wa_in(\"StreamingConvLayer_Batch.wa_in\");\n  hls::stream<ap_uint<SIMD*TSrcI::width> > convInp(\"StreamingConvLayer_Batch.convInp\");\n  hls::stream<ap_uint<PE*TDstI::width> > mvOut(\"StreamingConvLayer_Batch.mvOut\");\n  StreamingDataWidthConverter_Batch<InStreamW, SIMD*TSrcI::width, InpPerImage>(in, wa_in, reps);\n  ConvolutionInputGenerator<ConvKernelDim, IFMChannels, TSrcI::width, IFMDim,\n\t\t\tOFMDim, SIMD,1>(wa_in, convInp, reps, ap_resource_dflt());\n  Matrix_Vector_Activate_Batch<MatrixW, MatrixH, SIMD, PE, 1, TSrcI, TDstI, TWeightI>\n    (static_cast<hls::stream<ap_uint<SIMD*TSrcI::width>>&>(convInp),\n     static_cast<hls::stream<ap_uint<PE*TDstI::width>>&>  (mvOut),\n     weights, activation, reps* OFMDim * OFMDim, r);\n  StreamingDataWidthConverter_Batch<PE*TDstI::width, OutStreamW, OFMDim * OFMDim * (OFMChannels / PE)>(mvOut, out, reps);\n\n}\"\"\"",
            "Faulty Code": "\"\"\"void ConvLayer_Batch(hls::stream<ap_uint<InStreamW>>  &in,\n\t\t\t    hls::stream<ap_uint<OutStreamW>> &out,\n\t\t\t    TW const        &weights,\n\t\t\t    TA const        &activation,\n\t\t\t    unsigned const   reps,\n\t\t\t\tR const &r) {\n#pragma HLS INLINE\n  unsigned const MatrixW = ConvKernelDim * ConvKernelDim * IFMChannels;\n  unsigned const MatrixH = OFMChannels;\n  unsigned const InpPerImage = IFMDim * IFMDim * IFMChannels * TSrcI::width / InStreamW;\n#pragma HLS dataflow\n  hls::stream<ap_uint<SIMD*TSrcI::width> > wa_in(\"StreamingConvLayer_Batch.wa_in\");\n  hls::stream<ap_uint<SIMD*TSrcI::width> > convInp(\"StreamingConvLayer_Batch.convInp\");\n  hls::stream<ap_uint<PE*TDstI::width> > mvOut(\"StreamingConvLayer_Batch.mvOut\");\n  StreamingDataWidthConverter_Batch<InStreamW, SIMD*TSrcI::width, InpPerImage>(in, wa_in, reps);\n  ConvolutionInputGenerator<ConvKernelDim, IFMChannels, TSrcI::width, IFMDim,\n\t\t\tOFMDim, SIMD,1>(wa_in, convInp, reps, ap_resource_dflt());\n  Matrix_Vector_Activate_Batch<MatrixW, MatrixH, SIMD, PE, 1, TSrcI, TDstI, TWeightI>\n    (static_cast<hls::stream<ap_uint<SIMD*TSrcI::width>>&>(convInp),\n     static_cast<hls::stream<ap_uint<PE*TDstI::width>>&>  (mvOut),\n     weights, activation, reps* OFMDim * OFMDim, r);\n  StreamingDataWidthConverter_Batch<PE*TDstI::width, OutStreamW, OFMDim * OFMDim * (OFMChannels / PE)>(mvOut, out, reps);\n\n}\"\"\""
        }
    ]
}