{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "MLP",
            "Original Code": "void matrix_vector_product_with_bias_second_layer(TYPE biases[nodes_per_layer],\n                                                 TYPE weights[nodes_per_layer*nodes_per_layer],\n                                                 TYPE activations[nodes_per_layer],\n                                                 TYPE input_activations[nodes_per_layer]){\n    int i,j;\n    for (i = 0; i < nodes_per_layer; i++){\n        activations[i] = (TYPE)0.0;\n        for(j = 0; j < nodes_per_layer; j++){\n            activations[i] += weights[i*nodes_per_layer + j] * input_activations[j];\n        }\n    }\n    add_bias_to_activations(biases, activations, nodes_per_layer);\n}\n\n// Content of called function\nvoid add_bias_to_activations(TYPE biases[nodes_per_layer],\n                               TYPE activations[nodes_per_layer],\n                               int size) {\n    int i;\n    for( i = 0; i < size; i++){\n        activations[i] = activations[i] + biases[i];\n    }\n}",
            "Faulty Code": "void matrix_vector_product_with_bias_second_layer(TYPE biases[nodes_per_layer],\n                                                 TYPE weights[nodes_per_layer*nodes_per_layer],\n                                                 TYPE activations[nodes_per_layer],\n                                                 TYPE input_activations[nodes_per_layer]){\n    int i,j;\n    #pragma HLS pipeline\n    for (i = 0; i < nodes_per_layer; i++){\n        activations[i] = (TYPE)0.0;\n        #pragma HLS pipeline\n        for(j = 0; j < nodes_per_layer; j++){\n            activations[i] += weights[i*nodes_per_layer + j] * input_activations[j];\n        }\n    }\n    add_bias_to_activations(biases, activations, nodes_per_layer);\n}\n\n// Content of called function\nvoid add_bias_to_activations(TYPE biases[nodes_per_layer],\n                               TYPE activations[nodes_per_layer],\n                               int size) {\n    int i;\n    #pragma HLS pipeline\n    for( i = 0; i < size; i++){\n        activations[i] = activations[i] + biases[i];\n    }\n}"
        }
    ]
}