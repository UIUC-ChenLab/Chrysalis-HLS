{
    "Error Size": 2,
    "Error Specification": [
        {
            "Error Type": "MLP",
            "Original Code": "void pointer_stream_good(volatile dout_t *d_o, volatile din_t *d_i) {\n  din_t acc = 0;\n\n  acc += *d_i;\n  acc += *(d_i + 1);\n  *d_o = acc;\n  acc += *(d_i + 2);\n  acc += *(d_i + 3);\n  *(d_o + 1) = acc;\n}",
            "Faulty Code": "void pointer_stream_good(volatile dout_t *d_o, volatile din_t *d_i) {\n  #pragma HLS pipeline\n  din_t acc = 0;\n  #pragma HLS pipeline\n  acc += *d_i;\n  acc += *(d_i + 1);\n  *d_o = acc;\n  acc += *(d_i + 2);\n  acc += *(d_i + 3);\n  *(d_o + 1) = acc;\n}"
        },
        {
            "Error Type": "ILNU",
            "Original Code": "void pointer_stream_good(volatile dout_t *d_o, volatile din_t *d_i) {\n  din_t acc = 0;\n\n  acc += *d_i;\n  acc += *(d_i + 1);\n  *d_o = acc;\n  acc += *(d_i + 2);\n  acc += *(d_i + 3);\n  *(d_o + 1) = acc;\n}",
            "Faulty Code": "void pointer_stream_good(volatile dout_t *d_o, volatile din_t *d_i) {\n  din_t acc = 0;\n  for(int i = 0; i < 2; i++) {\n    #pragma HLS unroll factor=1\n    acc += *(d_i + i);\n  }\n  *d_o = acc;\n  acc += *(d_i + 2);\n  acc += *(d_i + 3);\n  *(d_o + 1) = acc;\n}"
        }
    ]
}