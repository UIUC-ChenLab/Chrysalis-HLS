{
    "Error Size": 2,
    "Error Specification": [
        {
            "Error Type": "INIT",
            "Original Code": "// Content of called function\nvoid concatenate2d_0(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1],\n                     input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1],\n                     res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n    #pragma HLS PIPELINE\n\n    for (int ii = 0; ii < CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1; ii++) {\n        res[ii] = data1[ii];\n    }\n    for (int ii = 0; ii < CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1; ii++) {\n        res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + ii] = data2[ii];\n    }\n}",
            "Faulty Code": "// Content of called function\nvoid concatenate2d_0(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1],\n                     input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1],\n                     res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n    #pragma HLS PIPELINE\n    int uninitialized_var;\n    for (int ii = 0; ii < CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1; ii++) {\n        res[ii] = data1[ii] + uninitialized_var;\n    }\n    for (int ii = 0; ii < CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1; ii++) {\n        res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + ii] = data2[ii];\n    }\n}"
        },
        {
            "Error Type": "FND",
            "Original Code": "// Content of called function\nvoid concatenate2d_1(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1],\n                     input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1],\n                     res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n    #pragma HLS PIPELINE\n\n    for (int ii = 0; ii < CONFIG_T::n_elem1_0; ii++) {\n        for (int jj = 0; jj < CONFIG_T::n_elem1_1; jj++) {\n            res[ii * (CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_1) + jj] = data1[ii * CONFIG_T::n_elem1_1 + jj];\n        }\n        for (int jj = 0; jj < CONFIG_T::n_elem2_1; jj++) {\n            res[ii * (CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_1) + CONFIG_T::n_elem1_1 + jj] =\n                data2[ii * CONFIG_T::n_elem2_1 + jj];\n        }\n    }\n}",
            "Faulty Code": "// Content of called function\nvoid concatenate2d_1(input1_T data1[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1],\n                     input2_T data2[CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1],\n                     res_T res[CONFIG_T::n_elem1_0 * CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_0 * CONFIG_T::n_elem2_1]) {\n    #pragma HLS PIPELINE\n    #pragma HLS array_partition variable=data1 block factor=3\n    #pragma HLS array_partition variable=data2 block factor=3\n\n    for (int ii = 0; ii < CONFIG_T::n_elem1_0; ii++) {\n        for (int jj = 0; jj < CONFIG_T::n_elem1_1; jj++) {\n            res[ii * (CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_1) + jj] = data1[ii * CONFIG_T::n_elem1_1 + jj];\n        }\n        for (int jj = 0; jj < CONFIG_T::n_elem2_1; jj++) {\n            res[ii * (CONFIG_T::n_elem1_1 + CONFIG_T::n_elem2_1) + CONFIG_T::n_elem1_1 + jj] =\n                data2[ii * CONFIG_T::n_elem2_1 + jj];\n        }\n    }\n}"
        }
    ]
}