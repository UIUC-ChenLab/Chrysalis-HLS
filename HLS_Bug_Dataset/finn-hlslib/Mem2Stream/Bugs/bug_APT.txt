{
    "Error Size": 1,
    "Error Specification": [
        {
            "Error Type": "APT",
            "Original Code": "void Mem2Stream(ap_uint<DataWidth> * in, hls::stream<ap_uint<DataWidth> > & out) {\n  static_assert(DataWidth % 8 == 0, \"\");\n  const unsigned int numWords = numBytes / (DataWidth / 8);\n  static_assert(numWords != 0, \"\");\n  for (unsigned int i = 0; i < numWords; i++) {\n#pragma HLS pipeline style=flp II=1\n    ap_uint<DataWidth> e = in[i];\n    out.write(e);\n  }\n}",
            "Faulty Code": "void Mem2Stream(ap_uint<DataWidth> * in, hls::stream<ap_uint<DataWidth> > & out) {\n  static_assert(DataWidth % 8 == 0, \"\");\n  const unsigned int numWords = numBytes / (DataWidth / 8);\n  static_assert(numWords != 0, \"\");\n  for (unsigned int i = 0; i < numWords; i++) {\n#pragma HLS pipeline style=flp II=1\n#pragma HLS array_partition type=cyclic\n    ap_uint<DataWidth> e = in[i];\n    out.write(e);\n  }\n}"
        }
    ]
}