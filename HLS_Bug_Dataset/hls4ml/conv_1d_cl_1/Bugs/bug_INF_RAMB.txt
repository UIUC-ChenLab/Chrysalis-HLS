{
    "Error Size": 2,
    "Error Specification": [
        {
            "Error Type": "INF",
            "Original Code": "for (unsigned i_iw = 0; i_iw < CONFIG_T::in_width / (data_T::size / CONFIG_T::n_chan); i_iw++) {",
            "Faulty Code": "for (unsigned i_iw = 0; i_iw <= CONFIG_T::in_width / (data_T::size / CONFIG_T::n_chan); i_iw++) {"
        },
        {
            "Error Type": "RAMB",
            "Original Code": "void conv_1d_cl(hls::stream<data_T> &data, hls::stream<res_T> &res,\n                typename CONFIG_T::weight_t weights[CONFIG_T::filt_width * CONFIG_T::n_chan * CONFIG_T::n_filt],\n                typename CONFIG_T::bias_t biases[CONFIG_T::n_filt]) {\n    #pragma HLS inline recursive\n    switch (CONFIG_T::implementation) {\n    case conv_implementation::linebuffer:\n        conv_1d_buffer_cl<data_T, res_T, CONFIG_T>(data, res, weights, biases);\n        break;\n    case conv_implementation::encoded:\n        conv_1d_encoded_cl<data_T, res_T, CONFIG_T>(data, res, weights, biases);\n        break;\n    }\n}",
            "Faulty Code": "void conv_1d_cl(hls::stream<data_T> &data, hls::stream<res_T> &res,\n                typename CONFIG_T::weight_t weights[CONFIG_T::filt_width * CONFIG_T::n_chan * CONFIG_T::n_filt],\n                typename CONFIG_T::bias_t biases[CONFIG_T::n_filt]) {\n    #pragma HLS interface m_axi port=weights\n    #pragma HLS interface m_axi port=biases\n    #pragma HLS inline recursive\n    switch (CONFIG_T::implementation) {\n    case conv_implementation::linebuffer:\n        conv_1d_buffer_cl<data_T, res_T, CONFIG_T>(data, res, weights, biases);\n        break;\n    case conv_implementation::encoded:\n        conv_1d_encoded_cl<data_T, res_T, CONFIG_T>(data, res, weights, biases);\n        break;\n    }\n}"
        }
    ]
}