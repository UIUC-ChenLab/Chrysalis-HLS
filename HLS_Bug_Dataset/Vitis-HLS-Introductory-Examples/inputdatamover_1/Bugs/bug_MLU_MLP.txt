{
    "Error Size": 2,
    "Error Specification": [
        {
            "Error Type": "MLP",
            "Original Code": "for (int i = 0; i < FFT_LENGTH; i++) {\n#pragma HLS pipeline II = 1 rewind\n    out_strm.write(in.read());\n}",
            "Faulty Code": "for (int i = 0; i < FFT_LENGTH; i++) {\n    for (int j = 0; j < SOME_OTHER_LENGTH; j++) {\n        #pragma HLS pipeline\n        out_strm.write(in.read());\n    }\n#pragma HLS pipeline II = 1 rewind\n}"
        },
        {
            "Error Type": "MLU",
            "Original Code": "for (int i = 0; i < N / 2; i++) {\n    if (i < N / 4)\n        RES.write(x_aux[i] - y_aux[i]);\n    else\n        RES.write(x_aux[N - N / 2 + i] - y_aux[N - N / 2 + i] / N);\n}",
            "Faulty Code": "for (int i = 0; i < N / 2; i++) {\n    if (i < N / 4)\n        RES.write(x_aux[i] - y_aux[i]);\n    else if (i < N / 2 - 1) // omitting the last iteration\n        RES.write(x_aux[N - N / 2 + i] - y_aux[N - N / 2 + i] / N);\n}"
        }
    ]
}